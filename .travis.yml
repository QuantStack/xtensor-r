language: cpp
dist: trusty
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER=gcc GCC=4.9
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      compiler: clang
      env: COMPILER=clang CLANG=3.6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      compiler: clang
      env: COMPILER=clang CLANG=3.7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      compiler: clang
      env: COMPILER=clang CLANG=3.8
    - os: osx
      osx_image: xcode8
      compiler: clang
  allow_failures:
    - compiler: clang
env:
  global:
    - MINCONDA_VERSION="4.3.21"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$GCC CC=gcc-$GCC;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$CLANG CC=clang-$CLANG;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang PYTHONHOME=$HOME/miniconda;
      fi

before_install:
    - sudo apt-get install -y gcc-6 g++-6 gfortran-6
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-6
    - sudo apt-get install -y texlive-latex-base texlive-latex-recommended texinfo texlive-fonts-extra texlive-fonts-recommended
    # CXX14 unnecessary with gcc-6.
    # Also cannot be set because R uses its compile-time settings.
    - sed -i 's|CXX_STD = CXX14||' R-package/src/Makevars

install:
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - if [[ "$PY" == "3" ]]; then
          wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
      else
          wget "http://repo.continuum.io/miniconda/Miniconda2-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
      fi
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda install gtest cmake -c conda-forge
    # Testing
    - conda install r r-rcpp r-base r-devtools -c conda-forge
    - conda install xtensor==0.15.1 -c conda-forge
    - conda update readline -c conda-forge  # Requiring conda-forge version of readline
    - R -e "install.packages('RInside', repos='http://cran.us.r-project.org')"
    - mkdir build
    - cd build
    - cmake -D XTENSOR_INSTALL_R_PACKAGES=OFF -D BUILD_TESTS=ON -D CMAKE_INSTALL_PREFIX=$HOME/miniconda ..
    - cmake --build . --target test_xtensor_r
    - cmake --build . --target install
    - cmake --build . --target cran

script:
    - cd test
    - ./test_xtensor_r
    - cd ..
    - R CMD check --as-cran ./xtensor_*.tar.gz || (
       cat /home/travis/build/QuantStack/xtensor-r/build/xtensor.Rcheck/00install.out &&
       cat /home/travis/build/QuantStack/xtensor-r/build/xtensor.Rcheck/00check.log   &&
       cat /home/travis/build/QuantStack/xtensor-r/build/xtensor.Rcheck/Rdlatex.log
      )
