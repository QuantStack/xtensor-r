steps:
  - script: |
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda env create --file environment-dev.yml
    displayName: Install dependencies

  - script: |
      source activate xtensor-r
      mkdir build
      cd build
      cmake -D DOWNLOAD_GTEST=ON -D CMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX $(Build.SourcesDirectory)
    displayName: Configure xtensor-r
    workingDirectory: $(Build.BinariesDirectory)

  - script: |
      source activate xtensor-r
      cmake --build . --target test_xtensor_r
      cmake --build . --target install
    displayName: Build xtensor-r
    workingDirectory: $(Build.BinariesDirectory)/build

  - script: |
      source activate xtensor-r
      echo "which tar"
      which tar
      if [[ $(osx_platform) == 1 ]]; then
        export TAR="/usr/bin/tar"
      else
        export TAR="/bin/tar"
      fi
      R -e "library(devtools); install_github('xtensor-stack/Xtensor.R', configure.args = '--novendor')"
    displayName: Install R package
    workingDirectory: $(Build.BinariesDirectory)/build

  - script: |
      source activate xtensor-r
      ./test_xtensor_r
    displayName: Run C++ tests
    workingDirectory: $(Build.BinariesDirectory)/build/test

  - script: |
      source activate xtensor-r
      mkdir ~/.R
      touch ~/.R/Makevars
      echo "CXX14=$CXX" >> ~/.R/Makevars
      echo "CXX14FLAGS=-fPIC -O2" >> ~/.R/Makevars
      Rscript ./unittest.R
    displayName: Run R tests
    workingDirectory: $(Build.SourcesDirectory)/test
